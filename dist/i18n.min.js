import*as DataTier from"./data-tier/data-tier.min.js";const r=[{id:"ar",dir:"rtl",lang:"ar",label:"عربى"},{id:"en",dir:"ltr",lang:"en",label:"English"},{id:"he",dir:"rtl",lang:"he",label:"עברית"},{id:"ru",dir:"ltr",lang:"ru",label:"Русский"}],e=DataTier.ties.create("l10n",{}).model,t={};let o;export{r as locales,n as getActiveLocale,i as setActiveLocale,a as initL10nPack,l as getL10n,d as stringifyDateTime,f as roundNumber,s as joinTexts};function n(){return o}function i(e){if(!e)throw new Error('invalid locale "'+e+'"');const n="object"==typeof e?r.find(r=>r===e):r.find(r=>r.id===e);if(!n)throw new Error('failed to match "'+e+'" to any of known locales');o&&o.id===n.id||(o=n,document.documentElement.lang=o.id,document.body.dir=o.dir,Object.keys(t).forEach(c))}function a(e,o){if(!e||"string"!=typeof e)throw new Error("resource Id MUST be a non-empty string");if(Object.prototype.hasOwnProperty.call(t,e))throw new Error('l10n resource under ID "'+e+'" has already been registered');if(!o)throw new Error("invalid resource ("+o+")");if("object"!=typeof o)throw new Error("resource MUST be an object");r.forEach(r=>{if(r.enforce&&!(r.id in o))throw new Error('resource "'+e+'" missing ENTRY for the required locale "'+r.id+'"');if(r.enforce&&!o[r.id])throw new Error('resource "'+e+'" has INVALID ENTRY for the required locale "'+r.id+'"')}),t[e]=o,c(e)}async function l(r){const e=o.id,n=t[r];if(n){if("object"==typeof n[e])return n[e];if("string"==typeof n[e]){const t=await fetch(n[e]);if(200===t.status){const r=await t.json();return n[e]=r,r}return console.error('failed to fetch l10n for locale "'+e+'", resource "'+r+'" by path "'+n[e]+'"'),null}throw new Error('no data found for locale "'+e+'", resource "'+r+'"')}throw new Error('l10n data was not registered for "'+r+'"')}async function c(r){try{e[r]=await l(r)}catch(e){console.error('failed to apply l10n change for "'+r+'"',e)}}function d(r,e){if(!(r&&r instanceof Date))throw new Error("illagal date/time parameter provided "+r);return e&&"dd/mm/yyyy"!==e?null:r.getDate().toString().padStart(2,"0")+"/"+(r.getMonth()+1).toString().padStart(2,"0")+"/"+r.getFullYear()}function f(r,e){const t="string"==typeof r?parseFloat(r):r;if("number"!=typeof t||isNaN(t))return console.error('invalid argument "'+r+'", returning is as is'),r;if("number"==typeof e){const r=Math.pow(10,e);return Math.round(t*r)/r}return t}function s(r){switch(o.id){case"en":return r.join(" and ");case"he":return r.join(" ו");default:return r.join(", ")}}i("en");